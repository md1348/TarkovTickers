// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package main

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __getItemsInput is used internally by genqlient
type __getItemsInput struct {
	Name string `json:"name"`
}

// GetName returns __getItemsInput.Name, and is useful for accessing the field via an interface.
func (v *__getItemsInput) GetName() string { return v.Name }

// getItemsItemsItem includes the requested fields of the GraphQL type Item.
type getItemsItemsItem struct {
	Name        string `json:"name"`
	ShortName   string `json:"shortName"`
	Avg24hPrice int    `json:"avg24hPrice"`
}

// GetName returns getItemsItemsItem.Name, and is useful for accessing the field via an interface.
func (v *getItemsItemsItem) GetName() string { return v.Name }

// GetShortName returns getItemsItemsItem.ShortName, and is useful for accessing the field via an interface.
func (v *getItemsItemsItem) GetShortName() string { return v.ShortName }

// GetAvg24hPrice returns getItemsItemsItem.Avg24hPrice, and is useful for accessing the field via an interface.
func (v *getItemsItemsItem) GetAvg24hPrice() int { return v.Avg24hPrice }

// getItemsResponse is returned by getItems on success.
type getItemsResponse struct {
	Items []getItemsItemsItem `json:"items"`
}

// GetItems returns getItemsResponse.Items, and is useful for accessing the field via an interface.
func (v *getItemsResponse) GetItems() []getItemsItemsItem { return v.Items }

// The query or mutation executed by getItems.
const getItems_Operation = `
query getItems ($name: String!) {
	items(name: $name) {
		name
		shortName
		avg24hPrice
	}
}
`

func getItems(
	ctx context.Context,
	client graphql.Client,
	name string,
) (*getItemsResponse, error) {
	req := &graphql.Request{
		OpName: "getItems",
		Query:  getItems_Operation,
		Variables: &__getItemsInput{
			Name: name,
		},
	}
	var err error

	var data getItemsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
